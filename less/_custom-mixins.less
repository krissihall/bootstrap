//== Default (dft) Font Size Mixins (with cooresponding line-heights)
//
//## These are the only font-sizes that will be used project-wide
.dft-font-1() {
  font-size: @dft-font-1;
  line-height: 17px;
}

.dft-font-2() {
  font-size: @dft-font-2;
  line-height: 18px;
}

.dft-font-3() {
  font-size: @dft-font-3;
  line-height: 19px;
}

.dft-font-4() {
  font-size: @dft-font-4;
  line-height: 20px;
}

.dft-font-5() {
  font-size: @dft-font-5;
  line-height: 21px;
}

.dft-font-6() {
  font-size: @dft-font-6;
  line-height: 22px;
}

.dft-font-7() {
  font-size: @dft-font-7;
  line-height: 26px;
}

.dft-font-8() {
  font-size: @dft-font-8;
  line-height: 32px;
}

.dft-font-9() {
  font-size: @dft-font-9;
  line-height: 38px;
}

.dft-font-10() {
  font-size: @dft-font-10;
  line-height: 40px;
}

.dft-font-11() {
  font-size: @dft-font-11;
  line-height: 46px;
}

.font-pixel-converter(@size: 16, @unit: em) {
  font-size: unit((@size / @font-base), @unit);
}

// Converts em or rem value of nested element based on parent base-font-size.
// Added as of AEO-Bootstrap v0.1.4:
//    refer to AEO-Bootstrap documentation for more informaiton.
.font-em-reset(@parent, @target-size, @unit: em) {
  @new-font-base: unit((@parent * @font-base));
  @target-size-in-px: unit((@target-size * @font-base));

  font-size: unit((@target-size-in-px / @new-font-base), @unit);
}

//== Custom Mixins and Over-riding Existing Mixins
//
//## Define custom mixins and modify existing mixins.

//** Mixin for Translates Usage
.translates(@xAxis, @yAxis) {
  -ms-transform: translate(@xAxis, @yAxis);
  -webkit-transform: translate(@xAxis, @yAxis);
  transform: translate(@xAxis, @yAxis);
}

.font-size-to-em(@size: 16){
  font-size: unit((@size / @font-base), em);
}

.box-shadow-reset() {
  .box-shadow(none);
}

.box-sizing(@type: border-box){
  -moz-box-sizing: @type;
  -webkit-box-sizing: @type;
  box-sizing: @type;
}

.font-em-reset(@parent, @target-size) {
  @new-font-base: unit((@parent * @font-base));
  @target-size-in-px: unit((@target-size * @font-base));

  font-size: unit((@target-size-in-px / @new-font-base), em);
}

/** Custom Scrollbars mixin can be applied to any element
 *  with an overflow: auto or overflow: scroll attribute
 */
.custom-scrollbars() {

  &::-webkit-scrollbar {
    width: 15px;
    padding: 5px 10px;
  } /* this targets the default scrollbar (compulsory) */

  &::-webkit-scrollbar-track {
    background: url('../images/scrollbar-bg.gif') repeat-y center;
  } /* the new scrollbar will have a flat appearance with the set background color */

  &::-webkit-scrollbar-track:horizontal {
    background-repeat: repeat-x;
  } /* Horizontal track scrollbar, repeat-y changed to repeat-x */

  &::-webkit-scrollbar-thumb {
    background-color: @brand-primary;
    border: 5px solid transparent;
    border-radius: 15px;
    background-clip: content-box;
  } /* this will style the thumb, ignoring the track */

  &::-webkit-scrollbar-button {
    background-color: #F00;
  } /* optionally, you can style the top and the bottom buttons (left and right for horizontal bars) */

  &::-webkit-scrollbar-corner {
    background-color: white;
  } /* if both the vertical and the horizontal bars appear, then perhaps the right bottom corner also needs */

  &::-webkit-scrollbar-button:start:decrement {
    height: 5px;
    width: 5px;
    display: block;
    background-repeat: no-repeat;
    background: transparent;
  }

  &::-webkit-scrollbar-button:end:increment {
    height: 5px;
    width: 5px;
    display: block;
    background-repeat: no-repeat;
    background: transparent;
  }

  &::-webkit-scrollbar-corner {
    height: 15px;
    width: 15px;
    display: block;
    background-repeat: no-repeat;
    background: transparent;
  }
}

//== Custom Mixins and Over-riding Existing Mixins
//
//## Define custom mixins and modify existing mixins.


//== Form Mixins
//
//## Over-ride core form mixins.

//** Form field focus styling
.form-control-focus(@initial: @brand-primary, @hover: @brand-primary-dark) {
  .focus-box-shadow (@initial, 1px);
  -webkit-backface-visibility: hidden;
  outline: none;

  &:focus {
    .focus-box-shadow(@hover);
    .transition('box-shadow' 300ms);
  }
}

//** Additional focus state for radio, checkboxes and radio-toggles accesibility
.form-tabbing-focus(@initial: @gray-dark) {
  outline: @initial dotted 1px !important;
}

.tab-focus() {
  outline: thin dotted;
  outline-color: @tab-focus-color;
}


.focus-box-shadow (@color: @gray-base, @width: 2px){
  .box-shadow(inset 0px 0px 0px @width @color);
}

.linear-gradient(@start: @gray-dark, @end: @gray-base) {
  /* Permalink - use to edit and share this gradient: http://colorzilla.com/gradient-editor/@end+0,7db9e8+100 */
  background: @start; /* Old browsers */
  background: -moz-linear-gradient(top,  @start 0%, @end 100%); /* FF3.6-15 */
  background: -webkit-linear-gradient(top,  @start 0%,@end 100%); /* Chrome10-25,Safari5.1-6 */
  background: linear-gradient(to bottom,  @start 0%,@end 100%); /* W3C, IE10+, FF16+, Chrome26+, Opera12+, Safari7+ */
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='@start', endColorstr='@end',GradientType=0 ); /* IE6-9 */
}
